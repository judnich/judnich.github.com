//@ sourceMappingURL=NormalMapGeneratorShader.map
// Generated by CoffeeScript 1.6.1
(function() {
  var frag, vert;

  frag = "precision highp float;\n\nvarying vec3 vPos;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec2 vUV;\n\nuniform sampler2D sampler;\n\n#define ONE_TEXEL (1.0/4096.0)\n\n\nvec4 positionAndHeight(vec3 cubePos, vec2 uv)\n{\n        vec3 pos = normalize(cubePos);\n        float h = texture2D(sampler, uv).a;\n        pos *= 0.997 + h * 0.003;\n        return vec4(pos, h);\n}\n\n\nvoid main(void) {\n	vec4 hCenter = positionAndHeight(vPos, vUV);\n\n        vec4 hR = positionAndHeight(vPos + ONE_TEXEL * vBinormal, vUV + vec2(ONE_TEXEL, 0));\n        vec4 hF = positionAndHeight(vPos + ONE_TEXEL * vTangent, vUV + vec2(0, ONE_TEXEL));\n        vec4 hL = positionAndHeight(vPos - ONE_TEXEL * vBinormal, vUV - vec2(ONE_TEXEL, 0));\n        vec4 hB = positionAndHeight(vPos - ONE_TEXEL * vTangent, vUV - vec2(0, ONE_TEXEL));\n\n        vec3 right = (hR.xyz - hL.xyz);\n        vec3 forward = (hF.xyz - hB.xyz);\n        vec3 normal = normalize(cross(right, forward));\n\n        // this has a very nice sharpening effect on normals for peaks\n        float ave = (hR.a + hF.a + hL.a + hB.a) * 0.25;\n        float diff = abs(hCenter.a - ave) * 1000.0;\n        normal /= (1.0 + diff);\n\n        float height = hCenter.a;\n        gl_FragColor = vec4((normal + 1.0) * 0.5, height);\n}\n";

  vert = "attribute vec2 aUV;\nattribute vec3 aPos;\nattribute vec3 aTangent;\nattribute vec3 aBinormal;\nvarying vec3 vPos;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec2 vUV;\n\nuniform vec2 verticalViewport;\n\nvoid main(void) {\n        vUV = aUV;\n	vPos = aPos;\n        vTangent = aTangent;\n        vBinormal = aBinormal;\n\n        vec2 pos = aUV;\n        pos.y = (pos.y - verticalViewport.x) / verticalViewport.y;\n        pos = pos * 2.0 - 1.0;\n\n	gl_Position = vec4(pos, 0.0, 1.0);\n}\n";

  xgl.addProgram("normalMapGenerator", vert, xgl.commonNoiseShaderSource + frag);

}).call(this);
