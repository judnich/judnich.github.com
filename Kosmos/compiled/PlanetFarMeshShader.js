// Generated by CoffeeScript 1.6.3
(function() {
  var frag, vert;

  frag = "\nprecision mediump float;\n\nvarying vec3 vNormal;\nvarying vec2 vUV;\n\nuniform vec3 lightVec;\nuniform sampler2D sampler;\n\nuniform vec3 planetColor1;\nuniform vec3 planetColor2;\n\nuniform float alpha;\n\n\nvec3 computeLighting(float globalDot, float diffuse, float ambient, vec3 color)\n{\n	/*float nightBlend = clamp(0.5 - globalDot * 4.0, 0.0, 1.0);\n 	float nightLight = clamp(0.2 / sqrt(camDist) - 0.001, 0.0, 1.0);\n 	float ambientNight = nightBlend * (ambient * ambient * 0.14 + 0.02) * nightLight;\n\n 	float grayColor = (color.r + color.g + color.b) / 3.0;\n 	vec3 nightColor = vec3(grayColor * 0.4, grayColor * 0.1, grayColor * 1.0);*/\n\n 	return color * diffuse;// + nightColor * ambientNight;\n}\n\nvec3 computeColor(float height, float ambient)\n{\n	float selfShadowing = 1.00 - dot(planetColor1, vec3(1,1,1)/3.0);\n\n	vec3 color = vec3(1,1,1);\n	float edge = mix(1.0, ambient, selfShadowing);\n	color *= mix(planetColor2, vec3(1,1,1) * edge, clamp(abs(height - 0.0) / 1.5, 0.0, 1.0));\n	color *= mix(planetColor1, vec3(1,1,1) * edge, clamp(abs(height - 0.5) / 2.5, 0.0, 1.0));\n\n	color *= height * 0.25 + 1.00;\n\n	return color;\n}\n\nvoid main(void) {\n	// extract terrain info\n	vec4 tex = texture2D(sampler, vUV);\n	vec3 norm = normalize(tex.xyz * 2.0 - 1.0);\n\n	// compute terrain shape features values\n	float globalDot = dot(lightVec, vNormal);\n	float diffuse = clamp(dot(lightVec, norm), 0.0, 1.0);\n 	float ambient = clamp(1.0 - 2.0 * acos(dot(norm, normalize(vNormal))), 0.0, 1.0);\n	float height = tex.a;\n\n	// compute color based on terrain features\n 	vec3 color = computeColor(height, ambient);\n\n	gl_FragColor.xyz = computeLighting(globalDot, diffuse, ambient, color);\n\n    gl_FragColor.w = alpha;\n}\n";

  vert = "\nattribute vec3 aPos;\nattribute vec2 aUV;\n\nuniform mat4 projMat;\nuniform mat4 modelViewMat;\n\nvarying vec3 vNormal;\nvarying vec2 vUV;\n\nvoid main(void) {\n	vNormal = aPos;\n	vUV = aUV;\n\n	vec4 pos = vec4(aPos, 1.0);\n	pos = modelViewMat * pos;\n    gl_Position = projMat * pos;\n}\n";

  xgl.addProgram("planetFarMesh", vert, frag);

}).call(this);

/*
//@ sourceMappingURL=PlanetFarMeshShader.map
*/
